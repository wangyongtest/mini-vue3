{"version":3,"file":"runtime-dom.esm-bundler.js","sources":["../../shared/src/index.ts","../src/nodeOps.ts","../src/attrs.ts","../src/class.ts","../src/events.ts","../src/styles.ts","../src/patchProps.ts","../../runtime-core/src/vNode.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/componentPublicInstanceProxyHandlers.ts","../../runtime-core/src/component.ts","../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/ref.ts","../../reactivity/src/computed.ts","../../runtime-core/src/queueJob.ts","../../runtime-core/src/apiLifeCycle.ts","../../runtime-core/src/renderer.ts","../../runtime-core/src/h.ts","../src/index.ts"],"sourcesContent":["// 判断是否为对象，切不能为 null\r\nconst isObject = (value)=> typeof value === 'object'&&value!== null\r\nconst extend = Object.assign\r\nconst isArray = Array.isArray\r\nconst isFunction = (value)=> typeof value === 'function'\r\nconst isNumber = value => typeof value === 'number'\r\nconst isString = value => typeof value === 'string'\r\nconst isIntegerKey = key => parseInt(key) + '' === key // 整形字符串 => 索引(更新索引)\r\n\r\n// \r\nlet hasOwnProperty = Object.prototype.hasOwnProperty\r\nconst hasOwn = (target,key)=> hasOwnProperty.call(target,key)\r\n\r\nconst hasChanged = (newVal, oldVal) => newVal !== oldVal\r\n\r\n\r\nexport {\r\n    isObject,\r\n    extend,\r\n    isArray,\r\n    isFunction,\r\n    isNumber,\r\n    isString,\r\n    isIntegerKey,\r\n    hasOwn,\r\n    hasChanged\r\n}","\r\nexport const nodeOps = {\r\n    // createElement , 不同平台创建元素不同\r\n    createElement: tagName => document.createElement(tagName), // 元素增加\r\n    remove: child=>{\r\n        const parent = child.parentNode\r\n        if(parent){\r\n            parent.removeChild(child)\r\n        }\r\n    },\r\n    /**\r\n     * \r\n     * @param child 插入元素\r\n     * @param parent  插入的父节点\r\n     * @param anchor 插入的参照物\r\n     */\r\n    insert: (child, parent,anchor=null)=>{\r\n        parent.insertBefore(child, anchor) // 如果参照物为空，则相当于 appendChild\r\n    },\r\n    querySelect: selector=> document.querySelector(selector),\r\n    setElementText: (el,text)=> el.textContent = text,\r\n    // 文本操作\r\n    createText: (text) => document.createTextNode(text),\r\n    setText: (node,text)=> node.nodeValue = text,\r\n    nextSibling:(node)=>node.nextSibling\r\n\r\n}","\r\n\r\nexport const patchAttrs = (el, key,value)=>{\r\n    if(value == null){\r\n        el.removeAttribute(key)\r\n    }else{\r\n        el.setAttribute(key,value)\r\n    }\r\n}","\r\n\r\nexport const patchClass = (el, value)=>{\r\n    if(value == null){\r\n        value = ''\r\n    }\r\n    el.className = value\r\n}","\r\n// 1、给元素缓存一个绑定事件的列表\r\n// 2、如果缓存中没有缓存过的，而且value有值，需要绑定，并且缓存起来\r\n// 3、之前绑定过事件，需要删除，删除缓存\r\n// 4、如果前后都有值，直接改变 invoker中value属性指向最新事件\r\nexport const patchEvent = (el,key,value)=>{ // vue 指令 删除、添加\r\n    // 对函数的缓存，原因可能是删除\r\n    const invokers = el._vei || (el.vei = {}) // vue event invoker\r\n    const exists = invokers[key] // 事件不存在\r\n    if(value &&exists  ){ // 需要绑定事件，而且事件还存在\r\n        exists.value = value\r\n    }else{\r\n        const eventName = key.slice(2).toLowerCase()\r\n        if(value){ // 需要绑定事件，之前没绑定过\r\n           let invoker = invokers[key] = createInvoker(value)\r\n            el.addEventListener(eventName, invoker)\r\n        }else{\r\n            // 之前绑定了，现在没有需要移除\r\n            el.removeEventListener(eventName, exists)\r\n            invokers[key] = undefined\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// value = fn\r\n// div @click = \"fn\" () =>value()\r\n// div\r\n\r\nfunction createInvoker(value){\r\n    const invoker = (e) => {\r\n        invoker.value(e)\r\n    }\r\n    invoker.value = value // 为了随时更改value\r\n    return invoker\r\n}","export const patchStyles = (el, prev, next) => {\r\n  //\r\n  const style = el.style; // 获取样式\r\n\r\n  if (next == null) {\r\n    el.removeAttribute(\"style\");\r\n  } else {\r\n    // 老的里边新的样式有没有\r\n    if (prev) {\r\n      for (let key in prev) {\r\n        if (next[key] == null) {\r\n          // 旧的里边有 新的没有  需要删除\r\n          style[key] = \"\";\r\n        }\r\n      }\r\n    }\r\n\r\n    // 新的里边老的央视有没有\r\n    for (let key in next) {\r\n      style[key] = next[key];\r\n    }\r\n  }\r\n};\r\n","// 只对一系列属性操作\r\n\r\nimport { patchAttrs } from \"./attrs\";\r\nimport { patchClass } from \"./class\";\r\nimport { patchEvent } from \"./events\";\r\nimport { patchStyles } from \"./styles\";\r\n\r\n/**\r\n *\r\n * @param el 节点\r\n * @param key 属性名\r\n * @param prevValue 上一次值\r\n * @param nextValue 下一次值\r\n */\r\nexport const patchProp = (el, key, prevValue, nextValue) => {\r\n  console.log(key);\r\n  \r\n  switch (key) {\r\n    case \"class\":\r\n      patchClass(el, nextValue);\r\n      break;\r\n    case \"style\":\r\n      patchStyles(el,prevValue, nextValue);\r\n      break;\r\n    case \"attrs\":\r\n        // !TODO: 如果不是事件,第六章\r\n\r\n        if(/^on[^a-z]/.test(key)){\r\n            // 事件 以 on开头， 如：onClick\r\n            patchEvent(el,key,nextValue)\r\n        }else{\r\n            patchAttrs(el,key,nextValue);\r\n        }\r\n      break\r\n    default:\r\n      break;\r\n  }\r\n};\r\n","// createVNode 创建虚拟节点 \r\n\r\nimport { isArray, isObject, isString } from \"@vue/shared\"\r\nimport { ShapeFlags } from \"packages/shared/src/shapeFlag\"\r\n\r\nexport function isVnode(vNode){\r\n    return vNode.__v_isVnode\r\n}\r\n\r\n\r\nexport const createVNode = (type, props, children=null)=>{\r\n    // 可以根据type 来区分组件 还是普通元素\r\n\r\n    // 根据type 区分是元素还是组件\r\n    const shapeFlag = isString(type) ? ShapeFlags.ELEMENT : isObject(type) ? ShapeFlags.STATEFUL_COMPONENT : 0\r\n\r\n    // 给虚拟节点添加一个类型\r\n    const vnode = {\r\n        // 一个对象来描述对应内容，虚拟节点有跨平台能力\r\n        __v_isVnode: true,\r\n        type,\r\n        props,\r\n        children,\r\n        component: null,\r\n        el: null, // 稍后将虚拟节点和真实节点对应起来\r\n        key: props&&props.key,  // diff算法会用到key\r\n        shapeFlag // 判断出当前元素和子元素的类型\r\n    }\r\n\r\n    normalizeChildren(vnode,children, )\r\n\r\n\r\n\r\n    return vnode\r\n}\r\n\r\nfunction normalizeChildren(vnode, children){\r\n\r\n    let type = 0\r\n\r\n    if(children == null){ // 不对子元素进行处理\r\n\r\n    } else if(isArray(children)){\r\n        type = ShapeFlags.ARRAY_CHILDREN\r\n\r\n    }else {\r\n        type = ShapeFlags.TEXT_CHILDREN\r\n    }\r\n    vnode.shapeFlag |= type\r\n}\r\n\r\n\r\nexport const Text = Symbol('Text')\r\nexport function normalizeVNode(child){\r\n    if(isObject(child)) return child\r\n    return createVNode(Text, null,String(child))\r\n}","import { createVNode } from \"./vNode\"\r\n\r\n// \r\nexport function createAppApi(render){\r\n  return  function createApp(rootComponent, rootProps){ // 告诉他那个组件那个属性来创建的应用\r\n    const app = {\r\n        _props: rootProps,\r\n        _rootComponent:rootComponent,\r\n        _container: null,\r\n        mount(container){\r\n            // let vNode = {} \r\n            // console.log(container,rootComponent,rootProps);\r\n            // render(vNode, container)\r\n\r\n            // 1、根据组件创建虚拟节点\r\n            // 2、将虚拟几点和容器获取到后调用render方法进行渲染\r\n\r\n\r\n            // 虚拟节点\r\n           const vNode =  createVNode(rootComponent, rootProps)\r\n\r\n           console.log(vNode,'vNode');\r\n           render(vNode,container)\r\n            // 调用render\r\n            app._container = container\r\n        }\r\n    }\r\n    return app\r\n}\r\n}\r\n\r\n\r\n","import { hasOwn } from \"@vue/shared\"\r\n\r\nexport const PublicInstanceProxyHandlers = {\r\n    get({_:instance}, key){\r\n        // 可以取值时 要访问 setState props \r\n        const {setupState, props,data} = instance\r\n        if(key[0] === '$'){\r\n            return // 不能访问 $ 开头的变量\r\n        }\r\n        if(hasOwn(setupState,key)){\r\n            return setupState[key]\r\n        }else if(hasOwn(props, key)){\r\n            return props[key]\r\n        }else if(hasOwn(data, key)){\r\n            return data[key]\r\n        }\r\n    },\r\n    set({_:instance}, key, value){\r\n        const {setupState, props,data} = instance\r\n        if(hasOwn(setupState,key)){\r\n            setupState[key] = value\r\n        }else if(hasOwn(props, key)){\r\n             props[key] = value\r\n        }else if(hasOwn(data, key)){\r\n             data[key] = value\r\n        }\r\n    }\r\n}","//  组件中的所有方法\r\n\r\nimport { ShapeFlags } from \"packages/shared/src/shapeFlag\"\r\nimport { PublicInstanceProxyHandlers } from \"./componentPublicInstanceProxyHandlers\"\r\nimport { isFunction, isObject } from \"@vue/shared\"\r\n\r\nexport function createComponentInstance(vnode){\r\n\r\n    // webcomponent 组件需要有 属性  插槽 \r\n    const instance = { // 组件的实例\r\n        vnode,\r\n        type: vnode.type,\r\n        props:{}, // props attrs 区别： \r\n        attrs:{},\r\n        slots:{},\r\n        ctx: null,\r\n        data:{},\r\n        setupState:{}, // 如果setup 返回一个对象， 这个对象会作为 setUpstate\r\n        isMounted: false, // 当前组件是否挂载过\r\n        render: null\r\n    }\r\n\r\n    instance.ctx = {_: instance} // instance.ctx._\r\n    return instance\r\n}\r\n\r\nexport function setupComponent(instance){\r\n    const {props, children} = instance.vnode\r\n\r\n    // 根据props 解析出props 和attrs, 将其放到instance\r\n    instance.props = props\r\n    instance.children = children\r\n\r\n    // 需要先看下当前组建是不是有状态的组件， 函数组件\r\n    let isStateFul = instance.vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n    if(isStateFul){ // 表示当前是一个带状态的组件\r\n        // 调用当前实例 setup 方法，用setup 返回值填充 setupState 和对应的render 方法\r\n        setupStateFulComponent(instance)\r\n    }\r\n}\r\n\r\n\r\nexport let currentInstance = null\r\nexport let setCurrentInstance = (instance) => {\r\n    currentInstance = instance\r\n}\r\nexport let getCurrentInstance = () => {\r\n    // 在setup中， 获取当前实例\r\n    return currentInstance\r\n}\r\n\r\n\r\nfunction setupStateFulComponent(instance){\r\n    // 1、代理 传递给render函数的参数\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers as any)\r\n\r\n    //  2、获取组建的类型， 拿到组建的 setup方法\r\n\r\n    let Component =  instance.type\r\n    let { setup } = Component\r\n\r\n    // ----------------------\r\n    if(setup){\r\n        currentInstance = instance\r\n        let setContext = createSetupContext(instance)\r\n      const setupResult = setup(instance.props, setContext) // instance 中的 props attrs slots emit expose 提取出来\r\n\r\n      currentInstance = null\r\n      handlerSetupResult(instance, setupResult)\r\n\r\n    }else{\r\n        finishComponentSetup(instance) // 完成组建的启动\r\n    }\r\n}\r\n\r\nfunction handlerSetupResult(instance,setupResult){\r\n\r\n    if(isFunction(setupResult)){\r\n        instance.render = setupResult\r\n    }else if(isObject(setupResult)){\r\n        instance.setupState = setupResult\r\n    }\r\n    finishComponentSetup(instance)\r\n}\r\n\r\nfunction finishComponentSetup(instance){\r\n    let Component =  instance.type\r\n    \r\n    if(!instance.render){\r\n        //  对template 模版进行编译， 产生render函数\r\n        if(!Component.render && Component.template){\r\n            // 编译 将结果 赋 给Component.render\r\n        }\r\n        instance.render = Component.render // 需要将生成的render函数挂在实力上\r\n    }\r\n    console.log(instance);\r\n    // console.log(instance.render.toString());\r\n    \r\n    // 对vue2.0+ 做了兼容处理\r\n    // applyOptions\r\n\r\n}\r\n\r\n\r\nfunction createSetupContext(instance){\r\n    return {\r\n        attrs: instance.attrs,\r\n        slots: instance.slots,\r\n        emit:()=>{},\r\n        expose:()=>{}\r\n    }\r\n}\r\n\r\n//  instance 表示组件的状态，各种状态， 组件的相关信息\r\n// context 就四个参数， ，为了开发时使用\r\n// render函数参数  proxy 主要是为了取值方便 ==> instance.proxy","import { isArray,isIntegerKey } from \"@vue/shared\";\r\nimport { triggerOrTypes } from \"./operators\";\r\n\r\n// effect 接收两个参数， 第一为函数，第二个为配置项\r\nexport function effect(fn, options: any = {}) {\r\n  // 目的：让effect变为响应式，数据变化进行重新执行\r\n  const effect = createReactiveEffect(fn, options);\r\n\r\n  // 如果属性中由lazy，说明是懒执行，首次不执行，柔则执行\r\n\r\n  if (!options.lazy) {\r\n    // 响应式默认会执行一次\r\n    effect();\r\n  }\r\n\r\n  return effect;\r\n}\r\n\r\n// 给 effect 添加标识(全局标识)\r\nlet uid = 0;\r\nlet activeEffect; // 存储当前的effect\r\nconst effectStack = [];\r\nfunction createReactiveEffect(fn, options) {\r\n  const effect = function reactiveEffect() {\r\n    // 解决场景二\r\n    // 判断栈中是否存在 effect, 不存在则放入栈中【保证effect没有加入到effectStack中】\r\n    if (!effectStack.includes(effect)) {\r\n      // 这里的执行可能会出错，使用try\r\n      try {\r\n        // 入栈\r\n        effectStack.push(effect);\r\n        activeEffect = effect;\r\n        // 函数的执行会取值，取值会触发 createGetter方法\r\n        return fn();\r\n      } finally {\r\n        // 执行完了之后出栈\r\n        effectStack.pop();\r\n        // 吧activeEffect 设置为 最后一个 effect\r\n        // 这样就能保证 track 中的key 与 activeEffect对应上\r\n        activeEffect = effectStack[effectStack.length - 1];\r\n      }\r\n    }\r\n  };\r\n  // 只做标识\r\n  effect.id = uid++;\r\n  // 用于标识这个effect是个响应式effect\r\n  effect._isEffect = true;\r\n  // 保留 effect对应的原函数，创建映射关系\r\n  effect.raw = fn;\r\n  // 保存用户属性\r\n  effect.options = options;\r\n  return effect;\r\n}\r\n\r\n// 收集依赖\r\n// 能够拿到当前的 effect\r\n// 让某个对象中的属性收集当他对应的effect函数\r\nconst targetMap = new WeakMap();\r\nexport function track(target, type, key) {\r\n  activeEffect; // 当前正在运行的effect\r\n  //   至此各个effect之间的对应关系已经对应上\r\n  // console.log(target, type, activeEffect);\r\n  //   接下来属性和effect关联\r\n  if (activeEffect === undefined) {\r\n    // 此属性不需要收集依赖，因为没在effect中使用\r\n    return;\r\n  }\r\n\r\n  // 查看 weakMap 是否存在 target\r\n  let depsMap = targetMap.get(target);\r\n  // 不存在添加， key:Object value: Map\r\n  if (!depsMap) {\r\n    targetMap.set(target, (depsMap = new Map()));\r\n  }\r\n\r\n  // 在map 对象上查找对应key,\r\n  let dep = depsMap.get(key);\r\n  // 不存在 设置 此map 对象 key ,value： Set\r\n  if (!dep) {\r\n    depsMap.set(key, (dep = new Set()));\r\n  }\r\n\r\n  // 当前 ket 的value中是否存在 activeEffect,  不存在，添加进去\r\n  if (!dep.has(activeEffect)) {\r\n    dep.add(activeEffect);\r\n  }\r\n\r\n  // console.log(targetMap, \"targetMap\");\r\n}\r\n\r\n// 触发更新\r\n// 找属性对应的 effect 让其执行 （数组、 对象）\r\nexport function trigger(target, type, key?, newValue?, oldValue?) {\r\n  //\r\n  // console.log(target, type, key, newValue, oldValue);\r\n  // 如果当前属性没有收集过 effect, 不需要作任何操作\r\n  const depsMap = targetMap.get(target);\r\n  if (!depsMap) return;\r\n\r\n  // 将所有的要执行的effect 全部存到一个新的集合中，最后统一执行\r\n//   这里对 effect进行额去重\r\n  const effects = new Set();\r\n  const add = (effectToAdd) => {\r\n    if (effectToAdd) {\r\n      effectToAdd.forEach((effect) => effects.add(effect));\r\n    }\r\n  };\r\n\r\n  // 1、判断修改的是不是数组的长度，因为修改的是数组长度，影响较大\r\n  if (key === \"length\" && isArray(target)) {\r\n    // 如果对应的长度 有依赖是收集（注释：数组长度大于更新的长度）\r\n    depsMap.forEach((dep, key) => {\r\n      // console.log(dep, key);\r\n      // 修改长度必收集的索引小\r\n      if (key === \"length\" || key > newValue) {\r\n        // 如果更改的长度 小鱼收集的索引，那么这个索引也需要触发 effect重新更新\r\n        // dep 是个map对象\r\n        add(dep);\r\n      }\r\n    });\r\n  } else {\r\n    // 可能是对象\r\n    if(key !== undefined){ // 修改，不可能新增\r\n        add(depsMap.get(key)) // \r\n    }\r\n    // 如果修改数组中的某一个索引\r\n    // 如果是添加了一个树荫就出发长度的更新\r\n    switch(type){\r\n        case triggerOrTypes.ADD:{\r\n            if(isArray(target) && isIntegerKey(key)){\r\n                add(depsMap.get('length'))\r\n            }\r\n        }\r\n    }\r\n  }\r\n  effects.forEach((effect:any)=>{\r\n    if(effect.options.scheduler){\r\n      effect.options.scheduler(effect)\r\n    }else{\r\n      effect()\r\n    }\r\n  })\r\n}\r\n\r\n/**场景**/\r\n\r\n// 第一步：使用一个map 对象， key:｛name:test,age:123｝ value： map对象，这个对象的 key:name value:set\r\n// weakMap: key =》｛name:test,age:123｝  value：(map) => ｛name=> set｝\r\n// {name: 'test', age: 123} => name => [effect,effect]\r\n// 同时出现多个相同的effect\r\n// effect(()=>{\r\n//     state.name\r\n// })\r\n// effect(()=>{\r\n//     state.name\r\n// })\r\n\r\n// 由于使用了一个全局变量activeEffect,会出现问题，这里模拟出现问题的场景\r\n// 当出现函数嵌套时， 那么这个activeEffect就无法对应了\r\n// 解决方案;effectStack栈\r\n// 场景一 函数调用是一个栈结垢\r\n// effect(()=>{         effect1\r\n//     state.name       effect1\r\n//     effect(（）=>{    effect1\r\n//         state.age     effect2\r\n//     })\r\n//     state.addres     effect2\r\n// })\r\n\r\n// 当出现这中情况时，会出现死循环\r\n// 场景二\r\n// effect(() => {\r\n//     state.num++\r\n// })\r\n","import { isObject,extend,isArray,isIntegerKey,hasOwn,hasChanged } from \"@vue/shared\";\r\nimport {readonly,reactive} from './reactive'\r\nimport {track,trigger} from './effect'\r\nimport {TrackOpTypes,triggerOrTypes} from './operators'\r\n\r\n\r\n// 由于拦截方法不一样\r\n// 实现 new Proxy(target, handler)\r\n// 核心拦截\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get (target,key, receiver){\r\n         // proxy + reflect\r\n        //  补充：后续Object上的方法 会被转移到 Reflect, Reflect.getProptypeof（）\r\n        //  之前 target[key]=value方式设置可能会失败，并不会报异常，也没有返回值标识\r\n        // Reflect方法具备返回值\r\n        //  Reflect 使用可以不使用 proxy\r\n        const res = Reflect.get(target,key, receiver)\r\n        if(!isReadonly){\r\n            // 非只读，收集依赖，数据变化后更新对应视图\r\n            console.log('执行effect是会取值，收集 effect')\r\n            // \r\n            track(target, TrackOpTypes.GET,key)\r\n        }\r\n\r\n\r\n        // 浅层==》返回对象\r\n        if(shallow){\r\n            return res\r\n        }\r\n// 看返回时是不是对象，同时是不是readonly:reactive\r\n// 如果是只是 readonly不是只读递归转为响应式\r\n// vue2: 一上来就递归，vue3:当取值时会进行代理。vue3:代理模式为懒代理\r\n        if(isObject(res)){\r\n            return isReadonly ? readonly(res) : reactive(res)\r\n        }\r\n\r\n        return res\r\n    }\r\n}\r\n// 核心设置\r\nfunction createSetter(shallow = false) {\r\n    return function set (target,key, value, receiver){\r\n      const oldValue = target[key]\r\n\r\n //  1、新增 还是更新。 vue2无法监控更改索引， 无法监控数组长度\r\n     let hasKey =  isArray(target)&&isIntegerKey(key) ? Number(key) < target.length : hasOwn(target,key)\r\n        // proxy + reflect\r\n        const res = Reflect.set(target,key,value, receiver)\r\n\r\n\r\n        if(!hasKey){\r\n          \r\n          // 新增\r\n          trigger(target, triggerOrTypes.ADD, key, value)\r\n        }else if(hasChanged(value, oldValue)){\r\n          \r\n          // 修改\r\n          trigger(target, triggerOrTypes.SET, key, value, oldValue)\r\n        }\r\n        console.log('setter');\r\n       // 当数据更新时，通知对应属性的 effect重新执行\r\n      //  场景区分\r\n     \r\n\r\n\r\n\r\n        return res\r\n    }\r\n}\r\n\r\nconst get = createGetter();\r\nconst shallowGet = createGetter(false, true);\r\nconst readonlyGet = createGetter(true);\r\nconst shallowReadonlyGet = createGetter(true, true);\r\n\r\n// 提取合并方法\r\nconst set = createSetter();\r\nconst shallowSetter = createSetter();\r\n\r\n// 是不是只读：\r\n// 1、只读： set 会报异常\r\n// 2、是不是深度\r\nexport const mutableHandlers = {\r\n  get,\r\n  set,\r\n};\r\nexport const shallowReactiveHandlers = {\r\n  get: shallowGet,\r\n  set: shallowSetter,\r\n};\r\n\r\nlet readonlyObj = {\r\n  set: (target, key) => {\r\n    set: (target, key) => {\r\n      console.warn(`set on key ${key} field`);\r\n    };\r\n  },\r\n};\r\nexport const readOnlyHandlers = extend(\r\n  {\r\n    get: readonlyGet,\r\n  },\r\n  readonlyObj\r\n);\r\n\r\nexport const shallowReadonlyHandlers = extend(\r\n  {\r\n    get: shallowReadonlyGet,\r\n  },\r\n  readonlyObj\r\n);\r\n","import { isObject } from \"@vue/shared\";\r\nimport {mutableHandlers,shallowReactiveHandlers,readOnlyHandlers,shallowReadonlyHandlers} from './baseHandlers'\r\n\r\n\r\nexport function reactive(target) {\r\n  return createReactiveObject(target, false, mutableHandlers);\r\n}\r\n\r\nexport function shallowReactive(target) {\r\n  return createReactiveObject(target, false, shallowReactiveHandlers);\r\n}\r\n\r\n// 只读的调set方法报错\r\nexport function readonly(target) {\r\n  return createReactiveObject(target, true, readOnlyHandlers);\r\n}\r\n\r\nexport function shallowReadonly(target) {\r\n  return createReactiveObject(target, true, shallowReadonlyHandlers);\r\n}\r\n\r\n//  方法的区别 1、是否只读 2、是否深层响应 ==》柯里化\r\n//  new Proxy() 最核心hi需要拦截数据的读取和数据的修改 ==》 拦截 get set\r\n// 04、创建两个 weekMap（）,存储只读和响应式（优点：会自动垃圾回收）\r\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\n\r\nexport function createReactiveObject(target, isReadonly, baseHandlers) {\r\n  // 01、创建响应式对象，\r\n  //  如果目标对象不是对象,就没法拦截了，因为 reactive API 只对对象进行拦截\r\n  if (!isObject(target)) {\r\n    return target;\r\n  }\r\n\r\n  //  05、 创建只读和响应的映射表\r\n  const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n\r\n  //  07、如果已经被代理了，直接返回即可\r\n  const existProxy = proxyMap.get(target);\r\n  if (existProxy) {\r\n    return existProxy;\r\n  }\r\n\r\n  //    02、创建代理\r\n  // 考虑：如果对象已经被代理了，就不需要在做代理,直接返回对象，但是这里分两种情况\r\n  //    1、可能为一个对象，被深度代理\r\n  //    2、又被只读代理了\r\n  const proxy = new Proxy(target, baseHandlers);\r\n  //   06、 将代理的对象和相应的代理结果换存起来\r\n  proxyMap.set(target, proxy);\r\n  // 03、返回proxy\r\n  return proxy;\r\n}\r\n","\r\nimport { hasChanged, isArray, isObject } from '@vue/shared';\r\nimport {track,trigger} from './effect'\r\nimport { TrackOpTypes, triggerOrTypes } from './operators';\r\nimport { reactive } from './reactive';\r\n// ref 和 reactive 的区别， reactive内部采用 proxy  ref 内部使用 defineProperty\r\nexport function ref(value){\r\n    // 将普通类型 变成一个对象。可以是对象，但是一般情况下直接使用 reactive\r\n   return createRef(value)\r\n}\r\n\r\nexport function shallowRef(value){\r\n    // 将普通类型 编程一个对象\r\n   return createRef(value, true)\r\n}\r\n\r\n// 这里判断如果是对象则用 reactive包裹， 否则 返回对象\r\nconst convert = (val) => isObject(val) ? reactive(val): val\r\n\r\nclass RefImpl{\r\n    public _value; // 表示 声明看了一个——value属性，但是没有赋值\r\n    public __v_isRef = true\r\n    constructor(public rawValue, public shallow){ // 参数前边增加修饰符， 表示此属性放到了实例上\r\n        \r\n        // \r\n    this._value = shallow ?  rawValue: convert(rawValue)\r\n    }\r\n    // 类的属性访问器\r\n    get value(){ // 取值取的 value , 会帮我们代理到 _value\r\n        // 取值时调用track()\r\n        track(this, TrackOpTypes.GET, 'value')\r\n        return this._value\r\n    }\r\n\r\n    set value(newValue){\r\n        if(hasChanged(newValue, this.rawValue)){\r\n            this.rawValue = newValue // 新增 会作为旧值， 下次在变动时进行对比\r\n            this._value =  this.shallow ?  newValue : convert(newValue)\r\n            trigger(this, triggerOrTypes.SET, 'value',newValue)\r\n        }\r\n       \r\n    }\r\n}\r\n\r\nfunction createRef(rowValue, shallow=false){\r\nreturn new RefImpl(rowValue, shallow)\r\n}\r\n\r\nclass ObjectRefImpl{\r\n    public __v_isRef = true\r\n    constructor(public target, public key){\r\n\r\n    }\r\n    get value(){// 代理\r\n        //  如果原对象是响应式就会收集依赖\r\n        return this.target[this.key]\r\n    }\r\n\r\n    set value(newValue){\r\n        // 如果远对象是响应式的，那么就会触发更新\r\n        this.target[this.key] = newValue\r\n    }\r\n}\r\n\r\n// 可以吧一个对象的值转化为ref类型\r\n// 将某一个key 对应的值转化为ref\r\nexport function toRef(target, key){\r\n    return new ObjectRefImpl(target, key)\r\n\r\n}\r\n\r\n// 这个object可能时 object 也可能是个 array\r\nexport function toRefs(object){\r\n    // 这里做一个判断 如果是数组，创建一个相同长度的数组\r\n    const ret = isArray(object) ? new Array(object.length) : {}\r\n    // 循环调用，把所有的属性都转为 key:value形式\r\n    for(let key in object){\r\n        ret[key] = toRef(object,key)\r\n    }\r\n}","import { isFunction } from \"@vue/shared\";\r\nimport {effect,track, trigger} from './effect'\r\nimport {TrackOpTypes, triggerOrTypes} from './operators'\r\n\r\n\r\n// 缓存 computed effect（lazy）+scheduler + 缓存标识\r\n\r\nclass ComputedRefImpl{\r\n    public _dirty = true // 默认取值时不要用缓存\r\n    public _value\r\n    public effect\r\n    // 计算属性本身就是一个effect\r\n    constructor(getter,public setter){ // ts中默认不会挂载到this上\r\n        this.effect = effect(getter,{ // 计算属性会默认产生一个effect,默认不执行,只有取值时才执行\r\n            lazy:true,\r\n            scheduler: ()=>{\r\n                if(!this._dirty){\r\n                    this._dirty = true\r\n                    trigger(this, triggerOrTypes.SET, 'value')\r\n                }\r\n            }\r\n        })\r\n       \r\n    }\r\n    get value(){ // vue2中计算双属性不具备收集依赖\r\n        if(this._dirty){ // 如果是脏的(第一次)会执行effect\r\n          this._value =   this.effect() // 执行会将用户返回值返回\r\n          this._dirty = false\r\n        }\r\n        // 这里作收集依赖\r\n        // 收集依赖场景::\r\n        // let age = ref(18);\r\n        // const myAge = computed(() => {\r\n        //   console.log(\"runner\");\r\n        //   return age.value + 10;\r\n        // });\r\n  \r\n        // effect(() => {\r\n        //   console.log(myAge.value);\r\n        // });\r\n        // age.value = 500;\r\n\r\n        track(this, TrackOpTypes.GET, 'value')\r\n        // 这样多次执行后智慧取第一次执行的结果\r\n        return this._value\r\n    }\r\n\r\n    set value(newVal){\r\n        this.setter(newVal)\r\n    }\r\n}\r\n\r\n//  vue2 和 vue3computed 原理不一样\r\nexport function computed(getterOrOptions){\r\n    let getter;\r\n    let setter;\r\n\r\n    if(isFunction(getterOrOptions)){\r\n        getter = getterOrOptions\r\n        setter = () => {\r\n            console.warn('computed value must be readonly')\r\n        }\r\n    } else{\r\n        getter = getterOrOptions.get\r\n        setter = getterOrOptions.set\r\n    }\r\n    // 创建计算属性\r\n    return new ComputedRefImpl(getter,setter)\r\n}","\r\n\r\nlet queue = []\r\nexport function queueJob(job){\r\n// \r\nif(!queue.includes(job)){\r\n    queue.push(job)\r\n    // 执行刷新队列\r\n    queueFlush()\r\n}\r\n}\r\n\r\nlet isFlushPending = false\r\nfunction queueFlush (){\r\n    if(!isFlushPending){\r\n        isFlushPending = true\r\n        Promise.resolve().then(flushJobs)\r\n    }\r\n}\r\n\r\nfunction flushJobs(){\r\n    isFlushPending = false\r\n    // 清空时需要根据调用的顺序依次刷新， 保证先刷新父，在刷新子\r\n    queue.sort((a,b)=>a.id - b.id)\r\n    for(let i=0; i< queue.length;i++){\r\n        const job = queue[i]\r\n        job()\r\n    }\r\n    queue.length = 0\r\n}","import { currentInstance, setCurrentInstance,getCurrentInstance } from \"./component\";\r\nexport {getCurrentInstance} from './component'\r\n\r\nconst enum LifeCycleHooks {\r\n  BEFORE_MOUNT = \"bm\",\r\n  MOUNTED = \"m\",\r\n  BEFORE_UPDATE = \"bu\",\r\n  UPDATED = \"u\",\r\n}\r\n\r\nconst injectHooks = (type, hook, target) => {\r\n    // 在此函数中保留了实例(闭包)\r\n  if (!target) {\r\n    return console.warn(\r\n      \"injection APIs can only be used during execution of setup()\"\r\n    );\r\n  }else{\r\n   const hooks =  target[type] || (target[type] = []) // instance.bm = []\r\n\r\n//    使用欺骗方法\r\nconst wrap = () => {\r\n    setCurrentInstance(target) // currentInstance = 自己的\r\n    hook.call(target)\r\n    setCurrentInstance(null)\r\n}\r\n   hooks.push(wrap)\r\n  }\r\n};\r\n\r\nconst createHooks =\r\n  (lifeCycle) =>\r\n  (hook, target = currentInstance) => {\r\n    // target 用来表示他是那个市里的钩子\r\n\r\n    // 给当前的实例增加对应的生命周期\r\n    injectHooks(lifeCycle, hook, target);\r\n  };\r\n\r\n\r\n  export const invokeArrayFns = (fns) => {\r\n    for(let i=0;i<fns.length;i++){ // vue2 中也是 调用时让函数依次执行\r\n        fns[i]()\r\n    }\r\n  }\r\n\r\nexport const onBeforeMount = createHooks(LifeCycleHooks.BEFORE_MOUNT);\r\n\r\nexport const onMounted = createHooks(LifeCycleHooks.MOUNTED);\r\n\r\nexport const onBeforeUpdate = createHooks(LifeCycleHooks.BEFORE_UPDATE);\r\n\r\nexport const onUpdated = createHooks(LifeCycleHooks.UPDATED);\r\n","import { ShapeFlags } from \"packages/shared/src/shapeFlag\";\r\nimport { createAppApi } from \"./apiCreateApp\";\r\nimport { createComponentInstance, setupComponent } from \"./component\";\r\nimport { effect } from \"@vue/reactivity\";\r\nimport { isObject } from \"@vue/shared\";\r\nimport { createVNode, normalizeVNode, Text } from \"./vNode\";\r\nimport { queueJob } from \"./queueJob\";\r\nimport { invokeArrayFns } from \"./apiLifeCycle\";\r\n\r\nexport function createRenderer(renderOptions) {\r\n  const {\r\n    insert: hostInsert,\r\n    remove: hostRemove,\r\n    patchProp: hostPatchProp,\r\n    createElement: hostCreateElement,\r\n    createText: hostCreateText,\r\n    createComment: hostCreateComment,\r\n    setText: hostSetText,\r\n    setElementText: hostSetElementText,\r\n    // parentNode: hostParentNode,\r\n    nextSibling: hostNextSibling,\r\n    // setScopeId: hostSetScopeId = NOOP,\r\n    // insertStaticContent: hostInsertStaticContent\r\n  } = renderOptions;\r\n\r\n  // 告诉 core 如何渲染\r\n  // ----------------------------组件相关---------------------\r\n\r\n  const setupRenderEffect = (instance, container) => {\r\n    // 需要创建一个 effect ,在effect中调用render方法，这样 render方法中拿到的数据会收集这个effect依赖, 属性更新时， effect 会重新执行\r\n    // instance.render()\r\n\r\n    //\r\n   instance.update =  effect(\r\n      function componentEffect() {\r\n        // 每个组件都有一个 effect, vue3是组件级更新，数据变化会重新执行对应的effect\r\n        if (!instance.isMounted) {\r\n          //  初次渲染\r\n\r\n          // \r\n          let {bm, m} = instance\r\n          if(bm){\r\n            invokeArrayFns(bm)\r\n          }\r\n\r\n\r\n          let proxyToUse = instance.proxy;\r\n          // vue2.x $vnode _vbnode\r\n          // vue3.x  vnode subTree\r\n          let subTree = (instance.subTree = instance.render.call(\r\n            proxyToUse,\r\n            proxyToUse\r\n          ));\r\n          console.log(subTree);\r\n          //   用render的返回值继续渲染\r\n          patch(null, subTree, container);\r\n          instance.isMounted = true;\r\n\r\n          if(m){ // mounted 要求必须在自组建完成后才能调自己\r\n            invokeArrayFns(m)\r\n          }\r\n\r\n        } else {\r\n\r\n          let {bm, u} = instance\r\n          if(bm){\r\n            invokeArrayFns(bm)\r\n          }\r\n          // 更新逻辑\r\n          // diff 算法(核心 diff + 序列优化 + watchApi  生命周期)\r\n          const prevTree = instance.subTree;\r\n          let proxyToUse = instance.proxy;\r\n          const nextTree = instance.render.call(proxyToUse, proxyToUse);\r\n          console.log(prevTree, nextTree);\r\n          patch(prevTree, nextTree, container);\r\n\r\n          if(u){\r\n            invokeArrayFns(u)\r\n          }\r\n        }\r\n      },\r\n      {\r\n        scheduler: queueJob,\r\n      }\r\n    );\r\n  };\r\n\r\n  const mountComponent = (initialVNode, container) => {\r\n    // 组件渲染流程， 最核心就是调用 setup拿到返回值， ，获取 render函数返回的结果\r\n    // 1、先有实例\r\n    const instance = (initialVNode.component =\r\n      createComponentInstance(initialVNode));\r\n    // 2、需要将数据解析到实例上\r\n    setupComponent(instance);\r\n    // 3、创建一个 effect 让render函数执行\r\n    setupRenderEffect(instance, container);\r\n  };\r\n\r\n  const processComponent = (n1, n2, container) => {\r\n    if (n1 == null) {\r\n      // 初始化情况， n1为null\r\n      mountComponent(n2, container);\r\n    } else {\r\n      // 组件更新流程\r\n    }\r\n  };\r\n  // ----------------------------组件相关---------------------\r\n\r\n  //----------------------------元素相关---------------------\r\n\r\n  const mountChildren = (children, container) => {\r\n    for (let i = 0; i < children.length; i++) {\r\n      let child = normalizeVNode(children[i]);\r\n      patch(null, child, container);\r\n    }\r\n  };\r\n\r\n  const mountElement = (vnode, container, anchor) => {\r\n    // 递归渲染\r\n    const { props, shapeFlag, type, children } = vnode;\r\n    let el = (vnode.el = hostCreateElement(type));\r\n\r\n    if (props) {\r\n      for (let key in props) {\r\n        hostPatchProp(el, key, null, props[key]);\r\n      }\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      hostSetElementText(el, children); // 文本直接塞进去\r\n    } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      mountChildren(children, el);\r\n    }\r\n\r\n    hostInsert(el, container, anchor);\r\n  };\r\n\r\n  const patchProps = (oldProps, newProps, el) => {\r\n    if (oldProps !== newProps) {\r\n      for (let key in newProps) {\r\n        const prev = oldProps[key];\r\n        const next = newProps[key];\r\n        if (prev !== next) {\r\n          hostPatchProp(el, key, prev, next);\r\n        }\r\n      }\r\n\r\n      for (let key in oldProps) {\r\n        if (!(key in oldProps)) {\r\n          hostPatchProp(el, key, oldProps, null);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const unMountChildren = (children) => {\r\n    for (let i = 0; i < children.length; i++) {\r\n      unMount(children[i]);\r\n    }\r\n  };\r\n\r\n  const patchKeyedChildren = (n1, n2, container) => {\r\n    // 对特殊情况进行优化\r\n    let i = 0; // 默认从头开始\r\n    let e1 = n1.length - 1;\r\n    let e2 = n2.length - 1;\r\n\r\n    // 尽可能减小比对区域\r\n    // sync from start, 从头开始对比，遇到不同停止\r\n    while (i < e1 && 1 < e2) {\r\n      const d1 = n1[i];\r\n      const d2 = n2[i];\r\n      if (isSameVNodeType(d1, d2)) {\r\n        patch(d1, d2, container);\r\n      } else {\r\n        break;\r\n      }\r\n      i++;\r\n    }\r\n    // sync from end\r\n    while (i < e1 && 1 < e2) {\r\n      const d1 = n1[e1];\r\n      const d2 = n2[e2];\r\n      if (isSameVNodeType(d1, d2)) {\r\n        patch(d1, d2, container);\r\n      } else {\r\n        break;\r\n      }\r\n      e1--;\r\n      e2--;\r\n    }\r\n\r\n    //   比较后有一方完全比完\r\n    //   同序列对比，提那家、删除\r\n    //  common sequence + mount\r\n    //  确定是要挂载， 如果最最终 i < e1 说明旧的少，反之说明旧的多\r\n    if (i < e1) {\r\n      if (i <= e2) {\r\n        const nextPos = e2 + 1;\r\n        const anchor = nextPos < n2.length ? n2[nextPos].el : null;\r\n        while (i <= e2) {\r\n          patch(null, n2[i], container, anchor);\r\n          i++;\r\n        }\r\n      }\r\n    }else if(i > e2) {\r\n        while(i < e1){\r\n            unMount(n1[i])\r\n            i++\r\n        }\r\n    }else{\r\n        // 乱序比较，需要尽可能复用。 用心的元素做成映射表，一样的复用\r\n        let s1 = i\r\n        let s2 = i\r\n        // vue3 用的是新的之作映射表 vue2用的是老的做映射表\r\n        const keyToNewIndexMap = new Map()\r\n        for(let i = s2; i<= e2; i++){\r\n            const childNode = n2[i]\r\n            keyToNewIndexMap.set(childNode.key, i)\r\n        }\r\n        \r\n        let toBePatched = e2 - s2 + 1\r\n        let newAIndexToOldIndexMap = new Array(toBePatched).fill(0)\r\n        // 去老的元素中查找，看有没有可服用\r\n        for(let i=s1; i<= e1; i++){\r\n            const oldVnode = n1[i]\r\n            let newIndex = keyToNewIndexMap.get(oldVnode.key)\r\n            if(newIndex === undefined){\r\n                unMount(oldVnode)\r\n            }else{ // 新老比对\r\n              // 新和旧的关系， 索引关系\r\n              newAIndexToOldIndexMap[newIndex - s2] = i + 1\r\n                patch(oldVnode, n2[i].key, container)\r\n            }\r\n        }\r\n\r\n\r\n        // 最长新索引序列\r\n        let increasingNewIndexSequence = getSequence(newAIndexToOldIndexMap)\r\n        let j = increasingNewIndexSequence.length -1 // 取出最后一项索引\r\n\r\n        for(let i=toBePatched-1; i >=0;i--){\r\n          let currentIndex = i+s2\r\n          let child = n2[currentIndex]\r\n          let anchor = currentIndex + 1 < n2.length ? n2[currentIndex + 1].el : null\r\n\r\n          // 第一次插入后，插入的元素是个虚拟节点，插入后，虚拟节点会有真实节点\r\n\r\n\r\n          // 如果自己是0 说明patch过 \r\n          if(newAIndexToOldIndexMap[i] == 0){\r\n            patch(null, child,container, anchor)\r\n          }else{\r\n            // 操作当前的元素，以当前元素的下一个作为参照物\r\n            // 这种操作需要将节点全部操作一遍\r\n\r\n            if(i !== increasingNewIndexSequence[j] ){\r\n              hostInsert(child.el, container,anchor)\r\n            }else{\r\n              j-- // 跳过不需要移动的元素， 为了减少移动\r\n            }\r\n\r\n            \r\n          }\r\n        }\r\n\r\n        // 最后就是移动节点，并且将新增的节点插入\r\n        // 最长递增子序列\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n  };\r\n\r\n  const patchChildren = (n1, n2, container) => {\r\n    const c1 = n1.children;\r\n    const c2 = n2.children;\r\n    // 1、旧节点有子元素  2、新的有子节点  3、新旧都有子节点 4、文本节点\r\n    const prevShapeFlag = n1.shapeFlag;\r\n    const shapeFlag = n2.shapeFlag;\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      // 场景一：旧的 是n个子元素， 新的是文本\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        unMountChildren(c1);\r\n      }\r\n\r\n      // 场景二： 两个节点文本情况\r\n      if (c2 !== c1) {\r\n        hostSetElementText(container, c2);\r\n      }\r\n    } else {\r\n      // 场景三： 旧的可能是文本或者数组， 新的是元素\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          // 当前是数组， 原来可能是数组 或文本\r\n          // 两个数组对比 --》 diff算法 8***\r\n\r\n          patchKeyedChildren(n1, n2, container);\r\n        } else {\r\n          // 没有子元素, 特殊情况，当前是 null\r\n          unMountChildren(c1);\r\n        }\r\n      } else {\r\n        //  上一次是文本\r\n        if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n          hostSetElementText(container, \"\");\r\n        }\r\n\r\n        //\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(c2, container);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //   当节点相同，更新属性\r\n  const patchElement = (n1, n2, container) => {\r\n    // 元素相同节点\r\n\r\n    let el = (n2.el = n1.el);\r\n\r\n    //更新属性， 更新子元素\r\n    const oldProps = n1.props || {};\r\n    const newProps = n2.props || {};\r\n    patchProps(oldProps, newProps, el);\r\n\r\n    patchChildren(n1, n2, container);\r\n  };\r\n\r\n  const processElement = (n1, n2, container, anchor) => {\r\n    if (n1 == null) {\r\n      // 元素挂载\r\n      mountElement(n2, container, anchor);\r\n    } else {\r\n      // 元素更新\r\n      patchElement(n1, n2, container);\r\n    }\r\n  };\r\n\r\n  const processText = (n1, n2, container) => {\r\n    if (n1 == null) {\r\n      // hostCreateText 把字符串转化为虚拟->dom元素\r\n      hostInsert((n2.el = hostCreateText(n2.children)), container);\r\n    }\r\n  };\r\n\r\n  const isSameVNodeType = (n1, n2) => {\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n  };\r\n  const unMount = (n1) => {\r\n    hostRemove(n1.el);\r\n  };\r\n\r\n  const patch = (n1, n2, container, anchor = null) => {\r\n    // 针对不同类型， 做不同初始化\r\n    const { shapeFlag, type } = n2;\r\n\r\n    if (n1 && !isSameVNodeType(n1, n2)) {\r\n      // 吧旧节点卸载掉， 换n2\r\n      anchor = hostNextSibling(n1.el);\r\n      unMount(n1);\r\n      n1 = null;\r\n    }\r\n\r\n    switch (type) {\r\n      case Text: {\r\n        processText(n1, n2, container);\r\n        break;\r\n      }\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          //   console.log(\"元素\");\r\n          processElement(n1, n2, container, anchor);\r\n        } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n          //   console.log(\"组件\");\r\n          processComponent(n1, n2, container);\r\n        }\r\n    }\r\n  };\r\n\r\n  const render = (vnode, container) => {\r\n    //  core 核心， 根据不同的虚拟节点，创建对应的真实元素\r\n\r\n    // 默认 调用render 可能是初始化流程\r\n    /**\r\n     * params1 初始化之前没有虚拟节点\r\n     * params2 表示当前要渲染的虚拟节点\r\n     * params3 要渲染的容器\r\n     */\r\n    patch(null, vnode, container);\r\n  };\r\n\r\n  return {\r\n    createApp: createAppApi(render),\r\n  };\r\n}\r\n\r\n// createRenderer 目的创建一个渲染器\r\n\r\n// 框架流程特点： 都是将组件转化为虚拟 DOM --> 虚拟dom生成真是dom挂载到真是页面上\r\n\r\nfunction getSequence(arr: number[]): number[] {\r\n  const p = arr.slice()\r\n  const result = [0]\r\n  let i, j, u, v, c\r\n  const len = arr.length\r\n  for (i = 0; i < len; i++) {\r\n    const arrI = arr[i]\r\n    if (arrI !== 0) {\r\n      j = result[result.length - 1]\r\n      if (arr[j] < arrI) {\r\n        p[i] = j\r\n        result.push(i)\r\n        continue\r\n      }\r\n      u = 0\r\n      v = result.length - 1\r\n      while (u < v) {\r\n        c = (u + v) >> 1\r\n        if (arr[result[c]] < arrI) {\r\n          u = c + 1\r\n        } else {\r\n          v = c\r\n        }\r\n      }\r\n      if (arrI < arr[result[u]]) {\r\n        if (u > 0) {\r\n          p[i] = result[u - 1]\r\n        }\r\n        result[u] = i\r\n      }\r\n    }\r\n  }\r\n  u = result.length\r\n  v = result[u - 1]\r\n  while (u-- > 0) {\r\n    result[u] = v\r\n    v = p[v]\r\n  }\r\n  return result\r\n}","import { isArray, isObject } from \"@vue/shared\"\r\nimport { createVNode, isVnode } from \"./vNode\"\r\n\r\nexport function h(type, propsOrChildren, children){\r\n\r\n    const l = arguments.length\r\n\r\n    if(l == 2){ // 属性 + children   || 类型 + children\r\n        //  如果 propsOrChildren 是数组， 直接作为第三个参数\r\n        if(isObject(propsOrChildren) && !isArray(propsOrChildren)){\r\n            if(isVnode(propsOrChildren)){ // 子元素节点， 只能是 字符串 || 数组\r\n                return createVNode(type, null, [])\r\n            }\r\n            return createVNode(type, propsOrChildren)\r\n            \r\n        }else{\r\n            // 如果第二个参数不是对象， 一定是 children\r\n            return createVNode(type, null, propsOrChildren)\r\n        }\r\n\r\n    }else{\r\n        if(l > 3){\r\n            children = Array.prototype.slice.call(arguments, 2)\r\n        }else if(l === 3 && isVnode(children)){\r\n            children = [children]\r\n        }\r\n        return createVNode(type, propsOrChildren,children)\r\n    }\r\n\r\n\r\n}","// 核心 提供 DOM Api, 如：操作节点、操作属性的更新\r\nimport { extend } from \"@vue/shared\";\r\nimport { nodeOps } from \"./nodeOps\";\r\nimport { patchProp } from \"./patchProps\";\r\nimport { createRenderer } from \"@vue/runtime-core\";\r\nexport * from '@vue/runtime-core'\r\nexport * from '@vue/reactivity'\r\n\r\n// 节点操作： 增删改查\r\n\r\n// 属性操作： 添加 删除 更新 (样式、类、事件、其他属性)\r\n\r\n// 渲染时用到的所有方法\r\nexport const rendererOptions =  extend({patchProp}, nodeOps)\r\n\r\n\r\n\r\n\r\n// vue 中 runtime-core提供了核心的方法，用来处理渲染， 他会使用runtime-dom 中的 api 进行渲染\r\n\r\n\r\n// 用户调用的时runtime-dom --.> runtime-core\r\n// runtime-dom 是为了解决平台差异\r\n\r\nexport function createApp(rootComponent, rootProps=null){\r\n\r\n    const app = createRenderer(rendererOptions).createApp(rootComponent, rootProps)\r\n    let {mount} = app\r\n    app.mount = function (container){\r\n        // 清空容器的操作\r\n        container = nodeOps.querySelect(container)\r\n        container.innerHTML = ''\r\n        // 将组件 渲染成 dom 元素，进行挂载\r\n        mount(container)\r\n    }\r\n    return app\r\n}"],"names":[],"mappings":"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"}